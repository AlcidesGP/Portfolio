{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "521ba3c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting streamlit\n",
      "  Obtaining dependency information for streamlit from https://files.pythonhosted.org/packages/e3/b0/b671eb919e6ff369d9bc75471a3a7ba1e82430edbbed8ef5ce9b3e2a4972/streamlit-1.28.0-py2.py3-none-any.whl.metadata\n",
      "  Downloading streamlit-1.28.0-py2.py3-none-any.whl.metadata (8.1 kB)\n",
      "Collecting altair<6,>=4.0 (from streamlit)\n",
      "  Obtaining dependency information for altair<6,>=4.0 from https://files.pythonhosted.org/packages/17/16/b12fca347ff9d062e3c44ad9641d2ec50364570a059f3078ada3a5119d7a/altair-5.1.2-py3-none-any.whl.metadata\n",
      "  Downloading altair-5.1.2-py3-none-any.whl.metadata (8.6 kB)\n",
      "Collecting blinker<2,>=1.0.0 (from streamlit)\n",
      "  Obtaining dependency information for blinker<2,>=1.0.0 from https://files.pythonhosted.org/packages/fa/2a/7f3714cbc6356a0efec525ce7a0613d581072ed6eb53eb7b9754f33db807/blinker-1.7.0-py3-none-any.whl.metadata\n",
      "  Downloading blinker-1.7.0-py3-none-any.whl.metadata (1.9 kB)\n",
      "Collecting cachetools<6,>=4.0 (from streamlit)\n",
      "  Obtaining dependency information for cachetools<6,>=4.0 from https://files.pythonhosted.org/packages/a2/91/2d843adb9fbd911e0da45fbf6f18ca89d07a087c3daa23e955584f90ebf4/cachetools-5.3.2-py3-none-any.whl.metadata\n",
      "  Downloading cachetools-5.3.2-py3-none-any.whl.metadata (5.2 kB)\n",
      "Requirement already satisfied: click<9,>=7.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (8.0.4)\n",
      "Requirement already satisfied: importlib-metadata<7,>=1.4 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (6.0.0)\n",
      "Requirement already satisfied: numpy<2,>=1.19.3 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (1.24.3)\n",
      "Requirement already satisfied: packaging<24,>=16.8 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (23.1)\n",
      "Requirement already satisfied: pandas<3,>=1.3.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (2.0.3)\n",
      "Requirement already satisfied: pillow<11,>=7.1.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (9.4.0)\n",
      "Collecting protobuf<5,>=3.20 (from streamlit)\n",
      "  Obtaining dependency information for protobuf<5,>=3.20 from https://files.pythonhosted.org/packages/72/eb/a07cc36ed9b119062886935a8371da8a977dda30b19cf57fe9162589b6f7/protobuf-4.25.0-cp310-abi3-win_amd64.whl.metadata\n",
      "  Downloading protobuf-4.25.0-cp310-abi3-win_amd64.whl.metadata (541 bytes)\n",
      "Requirement already satisfied: pyarrow>=6.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (11.0.0)\n",
      "Requirement already satisfied: python-dateutil<3,>=2.7.3 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (2.8.2)\n",
      "Requirement already satisfied: requests<3,>=2.27 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (2.31.0)\n",
      "Collecting rich<14,>=10.14.0 (from streamlit)\n",
      "  Obtaining dependency information for rich<14,>=10.14.0 from https://files.pythonhosted.org/packages/be/2a/4e62ff633612f746f88618852a626bbe24226eba5e7ac90e91dcfd6a414e/rich-13.6.0-py3-none-any.whl.metadata\n",
      "  Downloading rich-13.6.0-py3-none-any.whl.metadata (18 kB)\n",
      "Requirement already satisfied: tenacity<9,>=8.1.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (8.2.2)\n",
      "Requirement already satisfied: toml<2,>=0.10.1 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (0.10.2)\n",
      "Requirement already satisfied: typing-extensions<5,>=4.3.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (4.7.1)\n",
      "Collecting tzlocal<6,>=1.1 (from streamlit)\n",
      "  Obtaining dependency information for tzlocal<6,>=1.1 from https://files.pythonhosted.org/packages/97/3f/c4c51c55ff8487f2e6d0e618dba917e3c3ee2caae6cf0fbb59c9b1876f2e/tzlocal-5.2-py3-none-any.whl.metadata\n",
      "  Downloading tzlocal-5.2-py3-none-any.whl.metadata (7.8 kB)\n",
      "Collecting validators<1,>=0.2 (from streamlit)\n",
      "  Obtaining dependency information for validators<1,>=0.2 from https://files.pythonhosted.org/packages/3a/0c/785d317eea99c3739821718f118c70537639aa43f96bfa1d83a71f68eaf6/validators-0.22.0-py3-none-any.whl.metadata\n",
      "  Downloading validators-0.22.0-py3-none-any.whl.metadata (4.7 kB)\n",
      "Collecting gitpython!=3.1.19,<4,>=3.0.7 (from streamlit)\n",
      "  Obtaining dependency information for gitpython!=3.1.19,<4,>=3.0.7 from https://files.pythonhosted.org/packages/8d/c4/82b858fb6483dfb5e338123c154d19c043305b01726a67d89532b8f8f01b/GitPython-3.1.40-py3-none-any.whl.metadata\n",
      "  Downloading GitPython-3.1.40-py3-none-any.whl.metadata (12 kB)\n",
      "Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n",
      "  Downloading pydeck-0.8.1b0-py2.py3-none-any.whl (4.8 MB)\n",
      "     ---------------------------------------- 0.0/4.8 MB ? eta -:--:--\n",
      "     ---------------------------------------- 0.0/4.8 MB 1.3 MB/s eta 0:00:04\n",
      "      --------------------------------------- 0.1/4.8 MB 1.3 MB/s eta 0:00:04\n",
      "     -- ------------------------------------- 0.3/4.8 MB 2.0 MB/s eta 0:00:03\n",
      "     --- ------------------------------------ 0.4/4.8 MB 2.5 MB/s eta 0:00:02\n",
      "     ------- -------------------------------- 0.9/4.8 MB 3.8 MB/s eta 0:00:02\n",
      "     --------- ------------------------------ 1.1/4.8 MB 4.0 MB/s eta 0:00:01\n",
      "     ------------- -------------------------- 1.7/4.8 MB 5.0 MB/s eta 0:00:01\n",
      "     ---------------- ----------------------- 2.0/4.8 MB 5.4 MB/s eta 0:00:01\n",
      "     -------------------- ------------------- 2.5/4.8 MB 5.9 MB/s eta 0:00:01\n",
      "     ----------------------- ---------------- 2.8/4.8 MB 6.0 MB/s eta 0:00:01\n",
      "     ---------------------------- ----------- 3.4/4.8 MB 6.3 MB/s eta 0:00:01\n",
      "     ------------------------------- -------- 3.8/4.8 MB 6.8 MB/s eta 0:00:01\n",
      "     ----------------------------------- ---- 4.3/4.8 MB 7.0 MB/s eta 0:00:01\n",
      "     ------------------------------------- -- 4.5/4.8 MB 6.9 MB/s eta 0:00:01\n",
      "     -------------------------------------- - 4.7/4.8 MB 6.6 MB/s eta 0:00:01\n",
      "     ---------------------------------------- 4.8/4.8 MB 6.4 MB/s eta 0:00:00\n",
      "Requirement already satisfied: tornado<7,>=6.0.3 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (6.3.2)\n",
      "Requirement already satisfied: watchdog>=2.1.5 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from streamlit) (2.1.6)\n",
      "Requirement already satisfied: jinja2 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from altair<6,>=4.0->streamlit) (3.1.2)\n",
      "Requirement already satisfied: jsonschema>=3.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from altair<6,>=4.0->streamlit) (4.17.3)\n",
      "Requirement already satisfied: toolz in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from altair<6,>=4.0->streamlit) (0.12.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from click<9,>=7.0->streamlit) (0.4.6)\n",
      "Collecting gitdb<5,>=4.0.1 (from gitpython!=3.1.19,<4,>=3.0.7->streamlit)\n",
      "  Obtaining dependency information for gitdb<5,>=4.0.1 from https://files.pythonhosted.org/packages/fd/5b/8f0c4a5bb9fd491c277c21eff7ccae71b47d43c4446c9d0c6cff2fe8c2c4/gitdb-4.0.11-py3-none-any.whl.metadata\n",
      "  Downloading gitdb-4.0.11-py3-none-any.whl.metadata (1.2 kB)\n",
      "Requirement already satisfied: zipp>=0.5 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from importlib-metadata<7,>=1.4->streamlit) (3.11.0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.1 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2023.3)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from python-dateutil<3,>=2.7.3->streamlit) (1.16.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2023.7.22)\n",
      "Requirement already satisfied: markdown-it-py>=2.2.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.2.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.15.1)\n",
      "Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit)\n",
      "  Obtaining dependency information for smmap<6,>=3.0.1 from https://files.pythonhosted.org/packages/a7/a5/10f97f73544edcdef54409f1d839f6049a0d79df68adbc1ceb24d1aaca42/smmap-5.0.1-py3-none-any.whl.metadata\n",
      "  Downloading smmap-5.0.1-py3-none-any.whl.metadata (4.3 kB)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.1)\n",
      "Requirement already satisfied: attrs>=17.4.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (22.1.0)\n",
      "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.18.0)\n",
      "Requirement already satisfied: mdurl~=0.1 in c:\\users\\alcid\\anaconda3\\lib\\site-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.0)\n",
      "Downloading streamlit-1.28.0-py2.py3-none-any.whl (8.4 MB)\n",
      "   ---------------------------------------- 0.0/8.4 MB ? eta -:--:--\n",
      "   -- ------------------------------------- 0.5/8.4 MB 13.8 MB/s eta 0:00:01\n",
      "   --- ------------------------------------ 0.7/8.4 MB 8.9 MB/s eta 0:00:01\n",
      "   ---- ----------------------------------- 0.9/8.4 MB 7.0 MB/s eta 0:00:02\n",
      "   ----- ---------------------------------- 1.2/8.4 MB 6.4 MB/s eta 0:00:02\n",
      "   ------- -------------------------------- 1.5/8.4 MB 6.5 MB/s eta 0:00:02\n",
      "   -------- ------------------------------- 1.8/8.4 MB 6.4 MB/s eta 0:00:02\n",
      "   ---------- ----------------------------- 2.3/8.4 MB 7.2 MB/s eta 0:00:01\n",
      "   ------------ --------------------------- 2.6/8.4 MB 7.0 MB/s eta 0:00:01\n",
      "   ------------- -------------------------- 2.9/8.4 MB 7.1 MB/s eta 0:00:01\n",
      "   --------------- ------------------------ 3.3/8.4 MB 6.9 MB/s eta 0:00:01\n",
      "   ---------------- ----------------------- 3.5/8.4 MB 6.8 MB/s eta 0:00:01\n",
      "   ----------------- ---------------------- 3.8/8.4 MB 6.9 MB/s eta 0:00:01\n",
      "   ------------------ --------------------- 4.0/8.4 MB 6.5 MB/s eta 0:00:01\n",
      "   -------------------- ------------------- 4.3/8.4 MB 6.6 MB/s eta 0:00:01\n",
      "   --------------------- ------------------ 4.4/8.4 MB 6.4 MB/s eta 0:00:01\n",
      "   ---------------------- ----------------- 4.8/8.4 MB 6.3 MB/s eta 0:00:01\n",
      "   ------------------------ --------------- 5.1/8.4 MB 6.4 MB/s eta 0:00:01\n",
      "   ------------------------- -------------- 5.4/8.4 MB 6.4 MB/s eta 0:00:01\n",
      "   --------------------------- ------------ 5.8/8.4 MB 6.5 MB/s eta 0:00:01\n",
      "   ----------------------------- ---------- 6.2/8.4 MB 6.6 MB/s eta 0:00:01\n",
      "   ------------------------------ --------- 6.5/8.4 MB 6.5 MB/s eta 0:00:01\n",
      "   -------------------------------- ------- 6.9/8.4 MB 6.6 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 7.1/8.4 MB 6.5 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 7.5/8.4 MB 6.7 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 7.8/8.4 MB 6.7 MB/s eta 0:00:01\n",
      "   ---------------------------------------  8.2/8.4 MB 6.7 MB/s eta 0:00:01\n",
      "   ---------------------------------------  8.4/8.4 MB 6.7 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 8.4/8.4 MB 6.6 MB/s eta 0:00:00\n",
      "Downloading altair-5.1.2-py3-none-any.whl (516 kB)\n",
      "   ---------------------------------------- 0.0/516.2 kB ? eta -:--:--\n",
      "   ----------------- ---------------------- 225.3/516.2 kB 6.9 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 516.2/516.2 kB 6.5 MB/s eta 0:00:00\n",
      "Downloading blinker-1.7.0-py3-none-any.whl (13 kB)\n",
      "Downloading cachetools-5.3.2-py3-none-any.whl (9.3 kB)\n",
      "Downloading GitPython-3.1.40-py3-none-any.whl (190 kB)\n",
      "   ---------------------------------------- 0.0/190.6 kB ? eta -:--:--\n",
      "   ---------------------------------------- 190.6/190.6 kB 5.8 MB/s eta 0:00:00\n",
      "Downloading protobuf-4.25.0-cp310-abi3-win_amd64.whl (413 kB)\n",
      "   ---------------------------------------- 0.0/413.2 kB ? eta -:--:--\n",
      "   ----------------------------- ---------- 307.2/413.2 kB 6.3 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 413.2/413.2 kB 6.5 MB/s eta 0:00:00\n",
      "Downloading rich-13.6.0-py3-none-any.whl (239 kB)\n",
      "   ---------------------------------------- 0.0/239.8 kB ? eta -:--:--\n",
      "   ----------------------------- ---------- 174.1/239.8 kB 5.1 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 239.8/239.8 kB 7.2 MB/s eta 0:00:00\n",
      "Downloading tzlocal-5.2-py3-none-any.whl (17 kB)\n",
      "Downloading validators-0.22.0-py3-none-any.whl (26 kB)\n",
      "Downloading gitdb-4.0.11-py3-none-any.whl (62 kB)\n",
      "   ---------------------------------------- 0.0/62.7 kB ? eta -:--:--\n",
      "   ---------------------------------------- 62.7/62.7 kB 3.3 MB/s eta 0:00:00\n",
      "Downloading smmap-5.0.1-py3-none-any.whl (24 kB)\n",
      "Installing collected packages: validators, tzlocal, smmap, protobuf, cachetools, blinker, rich, pydeck, gitdb, gitpython, altair, streamlit\n",
      "Successfully installed altair-5.1.2 blinker-1.7.0 cachetools-5.3.2 gitdb-4.0.11 gitpython-3.1.40 protobuf-4.25.0 pydeck-0.8.1b0 rich-13.6.0 smmap-5.0.1 streamlit-1.28.0 tzlocal-5.2 validators-0.22.0\n"
     ]
    }
   ],
   "source": [
    "!pip install streamlit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c94a86d3",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'streamlit'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[1], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mstreamlit\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mst\u001b[39;00m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mnumpy\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mnp\u001b[39;00m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'streamlit'"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import plotly.express as px\n",
    "import plotly.subplots as sp\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "st.set_page_config(layout=\"wide\")\n",
    "st.title('Módulo 15 - Atividade I')\n",
    "st.write('- Reproduzir, ao menos, 20 códigos extraídos das páginas da documentação do streamlit')\n",
    "st.write(\"\"\"- Para realizar a atividade, irei utilizar um dataset que fiz coleta e tratamento, usando como base a glassdoor. O dataset consiste\n",
    "         sobre informações de vagas de emprego em meados de 2022 (se não me engano). Como o foco desse trabalho não é sobre webscrapping, deixo aqui\n",
    "         informado abaixo o link do código que usei para coletar os dados. \"\"\")\n",
    "\n",
    "st.write(\"\"\" Segue o link para a coleta de dados -> [https://alcidescoutinho.github.io/alcidesgabriel.github.io/C%C3%B3digo%20em%20HTML/Coleta_dos_dados_de_vaga%20(1).html]\"\"\")\n",
    "\n",
    "st.button(\"Rerun\")\n",
    "\n",
    "@st.cache_data\n",
    "def carregar_dados():\n",
    "    data = pd.read_csv(\"base_dados_tratado.csv\")\n",
    "    return data\n",
    "\n",
    "df = carregar_dados()\n",
    "notas = list()\n",
    "for i in range(df.shape[0]):\n",
    "    notas.append(df.iloc[i,12:17].tolist())\n",
    "    \n",
    "df['notas'] = notas\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "st.title('Avaliação por Local da vaga')\n",
    "# elementos \n",
    "locais = df['Local'].unique().tolist()\n",
    "locais.insert(0,'Todos')\n",
    "local_ = st.selectbox(\n",
    "    'Qual local da vaga deseja avaliar?',\n",
    "    (locais)\n",
    ")\n",
    "\n",
    "if local_ == 'Todos':\n",
    "    df_analise = df.copy()\n",
    "else:\n",
    "    df_analise = df.loc[df['Local'] == local_].copy()\n",
    "\n",
    "st.subheader(f'Para a seleção {local_}, há um total de ...{df_analise.shape[0]}.. vagas encontradas', divider='rainbow')\n",
    "\n",
    "def imagem():\n",
    "    figura = sp.make_subplots(rows=3, \n",
    "                              cols=2, \n",
    "                              specs=[[{'type':'domain'},{'type':'domain'}],[{'colspan':2}, None], [{'colspan':2}, None]],\n",
    "                              subplot_titles=('Locais','Experiência','Setores da contratantes',' Gráfico de dispersão da avaliação dos funcionários'))\n",
    "    \n",
    "    \n",
    "    \n",
    "    valores = df_analise['Local'].value_counts().values\n",
    "    nomes = df_analise['Local'].value_counts().index\n",
    "\n",
    "    figura.add_trace(go.Pie(values=valores, labels=nomes), row=1,col=1)\n",
    "    \n",
    "        \n",
    "    valores = df_analise['Experiência'].value_counts().values\n",
    "    nomes = df_analise['Experiência'].value_counts().index\n",
    "    figura.add_trace(go.Pie(values=valores, labels=nomes), row=1,col=2)\n",
    "    palette_de_cores = px.colors.qualitative.Set3\n",
    "    figura.update_traces(marker=dict(colors=palette_de_cores))\n",
    "    \n",
    "\n",
    "\n",
    "    valores = df_analise['Setor'].value_counts().values\n",
    "    nomes = df_analise['Setor'].value_counts().index\n",
    "    figura.add_trace(go.Bar(x=nomes, y=valores,text=valores, textposition='outside'))\n",
    "\n",
    "\n",
    "    elementos = [i for i in range(12,17,1)]\n",
    "    elementos.insert(0,4)\n",
    "\n",
    "    valores = df_analise.iloc[:,elementos].melt()['value']\n",
    "    nomes = df_analise.iloc[:,elementos].melt()['variable']\n",
    "    figura.add_trace(go.Box(x=valores, y=nomes, orientation='h'),row=3,col=1)\n",
    "\n",
    "\n",
    "    figura.update_layout(width=1380, height=1380, showlegend=True, grid={'rows': 1, 'columns': 2},\n",
    "                        legend=dict(x=0, y=1.15))\n",
    "    \n",
    "    \n",
    "    return st.plotly_chart(figura)\n",
    "\n",
    "imagem()\n",
    "\n",
    "\n",
    "# Mostrar locais de vaga\n",
    "\n",
    "df_analise = df_analise.loc[:,['Empresa','Vaga','Sede','Tamanho','Setor','notas']]\n",
    "\n",
    "\n",
    "st.data_editor(\n",
    "    df_analise,\n",
    "    column_config={\n",
    "        'notas': st.column_config.LineChartColumn(\n",
    "            'Notas dadas pelos funcionários',\n",
    "            width='medium',\n",
    "            y_min = 0,\n",
    "            y_max = 5\n",
    "        )\n",
    "    }\n",
    "    )\n",
    "\n",
    "st.title('Avaliação por vaga')\n",
    "\n",
    "empresa = st.selectbox('Qual é a vaga a ser avaliada?', (df['Empresa'].unique()) )\n",
    "if df_analise.loc[df_analise['Empresa'] == empresa].shape[0] > 1:\n",
    "    classes = df_analise.loc[df_analise['Empresa'] == empresa, 'Vaga'].unique()\n",
    "    genre = st.radio(\n",
    "        label = f\"Qual das {df_analise.loc[df_analise['Empresa'] == empresa].shape[0]} você deseja averiguar?\",        \n",
    "        options = classes)\n",
    "\n",
    "\n",
    "\n",
    "# Mostrar texto de contratação\n",
    "df_analise = df.loc[df['Empresa'] == empresa]\n",
    "\n",
    "\n",
    "\n",
    "# Mostrar as estatísticas \n",
    "texto = df_analise['Descrição'].iloc[0]\n",
    "st.subheader(f'Descrição da vaga', divider='green')\n",
    "st.write(texto)\n",
    "df_analise = df_analise.drop(['Descrição','Link','Unnamed: 0'], axis=1)\n",
    "\n",
    "\n",
    "\n",
    "st.subheader(f'Informações complementares da empresa', divider='green')\n",
    "st.data_editor(\n",
    "    df_analise,\n",
    "    column_config={\n",
    "        'notas': st.column_config.LineChartColumn(\n",
    "            'Notas dadas pelos funcionários',\n",
    "            width='medium',\n",
    "            y_min = 0,\n",
    "            y_max = 5\n",
    "        ),\n",
    "        'Nota':st.column_config.NumberColumn(\n",
    "            \"Nota dos funcionários\",\n",
    "            min_value=0,\n",
    "            max_value=5,\n",
    "            step=1,\n",
    "            format=\"%d ⭐\")  \n",
    "    }\n",
    "    )\n",
    "\n",
    "st.subheader(f'Código usado para essa página do streamlit', divider='green')\n",
    "\n",
    "\n",
    "code = \"\"\"\n",
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import plotly.express as px\n",
    "import plotly.subplots as sp\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "st.set_page_config(layout=\"wide\")\n",
    "st.title('Módulo 15 - Atividade I')\n",
    "st.write('- Reproduzir, ao menos, 20 códigos extraídos das páginas da documentação do streamlit')\n",
    "st.write('- Para realizar a atividade, irei utilizar um dataset que fiz coleta e tratamento, usando como base a glassdoor. O dataset consiste'\n",
    "         'sobre informações de vagas de emprego em meados de 2022 (se não me engano). Como o foco desse trabalho não é sobre webscrapping, deixo aqui'\n",
    "         'informado abaixo o link do código que usei para coletar os dados. ')\n",
    "\n",
    "st.write(\" Segue o link para a coleta de dados -> [https://alcidescoutinho.github.io/alcidesgabriel.github.io/C%C3%B3digo%20em%20HTML/Coleta_dos_dados_de_vaga%20(1).html]\")\n",
    "\n",
    "st.button(\"Rerun\")\n",
    "def carregar_dados():\n",
    "    data = pd.read_csv(\"base_dados_tratado.csv\")\n",
    "    return data\n",
    "\n",
    "df = carregar_dados()\n",
    "notas = list()\n",
    "for i in range(df.shape[0]):\n",
    "    notas.append(df.iloc[i,12:17].tolist())\n",
    "    \n",
    "df['notas'] = notas\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "st.title('Avaliação por Local da vaga')\n",
    "# elementos \n",
    "locais = df['Local'].unique().tolist()\n",
    "locais.insert(0,'Todos')\n",
    "local_ = st.selectbox(\n",
    "    'Qual local da vaga deseja avaliar?',\n",
    "    (locais)\n",
    ")\n",
    "\n",
    "if local_ == 'Todos':\n",
    "    df_analise = df.copy()\n",
    "else:\n",
    "    df_analise = df.loc[df['Local'] == local_].copy()\n",
    "\n",
    "st.subheader(f'Para a seleção {local_}, há um total de ...{df_analise.shape[0]}.. vagas encontradas', divider='rainbow')\n",
    "\n",
    "def imagem():\n",
    "    figura = sp.make_subplots(rows=3, \n",
    "                              cols=2, \n",
    "                              specs=[[{'type':'domain'},{'type':'domain'}],[{'colspan':2}, None], [{'colspan':2}, None]],\n",
    "                              subplot_titles=('Locais','Experiência','Setores da contratantes',' Gráfico de dispersão da avaliação dos funcionários'))\n",
    "    \n",
    "    \n",
    "    \n",
    "    valores = df_analise['Local'].value_counts().values\n",
    "    nomes = df_analise['Local'].value_counts().index\n",
    "\n",
    "    figura.add_trace(go.Pie(values=valores, labels=nomes), row=1,col=1)\n",
    "    \n",
    "        \n",
    "    valores = df_analise['Experiência'].value_counts().values\n",
    "    nomes = df_analise['Experiência'].value_counts().index\n",
    "    figura.add_trace(go.Pie(values=valores, labels=nomes), row=1,col=2)\n",
    "    palette_de_cores = px.colors.qualitative.Set3\n",
    "    figura.update_traces(marker=dict(colors=palette_de_cores))\n",
    "    \n",
    "\n",
    "\n",
    "    valores = df_analise['Setor'].value_counts().values\n",
    "    nomes = df_analise['Setor'].value_counts().index\n",
    "    figura.add_trace(go.Bar(x=nomes, y=valores,text=valores, textposition='outside'))\n",
    "\n",
    "\n",
    "    elementos = [i for i in range(12,17,1)]\n",
    "    elementos.insert(0,4)\n",
    "\n",
    "    valores = df_analise.iloc[:,elementos].melt()['value']\n",
    "    nomes = df_analise.iloc[:,elementos].melt()['variable']\n",
    "    figura.add_trace(go.Box(x=valores, y=nomes, orientation='h'),row=3,col=1)\n",
    "\n",
    "\n",
    "    figura.update_layout(width=1380, height=1380, showlegend=True, grid={'rows': 1, 'columns': 2},\n",
    "                        legend=dict(x=0, y=1.15))\n",
    "    \n",
    "    \n",
    "    return st.plotly_chart(figura)\n",
    "\n",
    "imagem()\n",
    "\n",
    "\n",
    "# Mostrar locais de vaga\n",
    "\n",
    "df_analise = df_analise.loc[:,['Empresa','Vaga','Sede','Tamanho','Setor','notas']]\n",
    "\n",
    "\n",
    "st.data_editor(\n",
    "    df_analise,\n",
    "    column_config={\n",
    "        'notas': st.column_config.LineChartColumn(\n",
    "            'Notas dadas pelos funcionários',\n",
    "            width='medium',\n",
    "            y_min = 0,\n",
    "            y_max = 5\n",
    "        )\n",
    "    }\n",
    "    )\n",
    "\n",
    "st.title('Avaliação por vaga')\n",
    "\n",
    "empresa = st.selectbox('Qual é a vaga a ser avaliada?', (df['Empresa'].unique()) )\n",
    "if df_analise.loc[df_analise['Empresa'] == empresa].shape[0] > 1:\n",
    "    classes = df_analise.loc[df_analise['Empresa'] == empresa, 'Vaga'].unique()\n",
    "    genre = st.radio(\n",
    "        label = f\"Qual das {df_analise.loc[df_analise['Empresa'] == empresa].shape[0]} você deseja averiguar?\",        \n",
    "        options = classes)\n",
    "\n",
    "\n",
    "\n",
    "# Mostrar texto de contratação\n",
    "df_analise = df.loc[df['Empresa'] == empresa]\n",
    "\n",
    "\n",
    "\n",
    "# Mostrar as estatísticas \n",
    "texto = df_analise['Descrição'].iloc[0]\n",
    "st.subheader(f'Descrição da vaga', divider='green')\n",
    "st.write(texto)\n",
    "df_analise = df_analise.drop(['Descrição','Link','Unnamed: 0'], axis=1)\n",
    "\n",
    "\n",
    "\n",
    "st.subheader(f'Informações complementares da empresa', divider='green')\n",
    "st.data_editor(\n",
    "    df_analise,\n",
    "    column_config={\n",
    "        'notas': st.column_config.LineChartColumn(\n",
    "            'Notas dadas pelos funcionários',\n",
    "            width='medium',\n",
    "            y_min = 0,\n",
    "            y_max = 5\n",
    "        ),\n",
    "        'Nota':st.column_config.NumberColumn(\n",
    "            \"Nota dos funcionários\",\n",
    "            min_value=0,\n",
    "            max_value=5,\n",
    "            step=1,\n",
    "            format=\"%d ⭐\")  \n",
    "    }\n",
    "    )\n",
    "\n",
    "st.subheader(f'Código usado para essa página do streamlit', divider='green')\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "st.code(code, language='python')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
